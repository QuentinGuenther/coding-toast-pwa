{"version":3,"sources":["webpack:///./node_modules/react-bootstrap/esm/CardImg.js","webpack:///./node_modules/react-bootstrap/esm/Card.js","webpack:///./src/components/card/BasicCard.tsx","webpack:///./src/pages/resources.tsx"],"names":["CardImg","forwardRef","_ref","ref","bsPrefix","className","variant","_ref$as","as","Component","props","prefix","createElement","displayName","defaultProps","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","Card","bg","text","border","body","children","cardContext","cardHeaderBsPrefix","CardContext","Provider","value","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","BasicCard","id","title","banner","description","publishDate","key","style","margin","backgroundColor","src","alt","to","ResourcesPage","query","backgroundShade","BackgroundShade","PRIMARY","xs","lg","allStrapiResources","edges","map","resource","node"],"mappings":"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","file":"component---src-pages-resources-tsx-f6fdb43f663f2e334b65.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: null\n};\nvar CardImg = React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      variant = _ref.variant,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'img' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"variant\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: classNames(variant ? prefix + \"-\" + variant : prefix, className)\n  }, props));\n});\nCardImg.displayName = 'CardImg';\nCardImg.defaultProps = defaultProps;\nexport default CardImg;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardContext from './CardContext';\nimport CardImg from './CardImg';\nvar DivStyledAsH5 = divWithClassName('h5');\nvar DivStyledAsH6 = divWithClassName('h6');\nvar CardBody = createWithBsPrefix('card-body');\nvar defaultProps = {\n  body: false\n};\nvar Card = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      bg = _ref.bg,\n      text = _ref.text,\n      border = _ref.border,\n      body = _ref.body,\n      children = _ref.children,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"bg\", \"text\", \"border\", \"body\", \"children\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card');\n  var cardContext = useMemo(function () {\n    return {\n      cardHeaderBsPrefix: prefix + \"-header\"\n    };\n  }, [prefix]);\n  return /*#__PURE__*/React.createElement(CardContext.Provider, {\n    value: cardContext\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, bg && \"bg-\" + bg, text && \"text-\" + text, border && \"border-\" + border)\n  }), body ? /*#__PURE__*/React.createElement(CardBody, null, children) : children));\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nCard.Img = CardImg;\nCard.Title = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nCard.Subtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nCard.Body = CardBody;\nCard.Link = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nCard.Text = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nCard.Header = createWithBsPrefix('card-header');\nCard.Footer = createWithBsPrefix('card-footer');\nCard.ImgOverlay = createWithBsPrefix('card-img-overlay');\nexport default Card;","import * as React from 'react'\nimport { Card } from 'react-bootstrap'\nimport { Link } from 'gatsby'\n\ninterface CardProps {\n  id: string\n  title: string\n  banner: string\n  description: string\n  publishDate: string\n}\n\nconst BasicCard: React.FC<CardProps> = (props) => {\n  const { id, title, banner, description, publishDate } = props\n  return (\n    <Card key={id} style={{ margin: '16px 0', backgroundColor: 'rgba(255, 255, 255, 0.05)' }}>\n      <Card.Img variant=\"top\" src={banner} alt={`Banner ${title}`} />\n      <Card.Body>\n        <Card.Title>{title}</Card.Title>\n        <Card.Subtitle className=\"mb-2 text-style-muted text-color-secondary\">{publishDate}</Card.Subtitle>\n        <Card.Text className=\"text-color-primary\">{description}</Card.Text>\n        <Card.Link>\n          <Link to=\"/\">Read More</Link>\n        </Card.Link>\n      </Card.Body>\n    </Card>\n  )\n}\n\nexport default BasicCard\n","import * as React from 'react'\nimport { Row, Col } from 'react-bootstrap'\nimport { useStaticQuery, graphql } from 'gatsby'\nimport IndexLayout from '../layouts'\nimport Page from '../components/Page'\nimport SectionContainer, { BackgroundShade } from '../components/section-container/SectionContainer'\nimport BasicCard from '../components/card/BasicCard'\n\nconst ResourcesPage: React.FC = () => {\n  const query = useStaticQuery(\n    graphql`\n      query {\n        allStrapiResources {\n          edges {\n            node {\n              id\n              title\n              description\n              banner\n              url\n            }\n          }\n        }\n      }\n    `\n  )\n  return (\n    <IndexLayout>\n      <Page>\n        <SectionContainer backgroundShade={BackgroundShade.PRIMARY}>\n          <h1 className=\"text-center\">Resources</h1>\n          <Row xs={1} lg={2}>\n            {query.allStrapiResources?.edges.map((resource: any) => {\n              const { title, banner, description, id } = resource.node\n              return (\n                <Col>\n                  <BasicCard id={id} title={title} banner={banner} description={description} publishDate=\"\" />\n                </Col>\n              )\n            })}\n          </Row>\n        </SectionContainer>\n      </Page>\n    </IndexLayout>\n  )\n}\n\nexport default ResourcesPage\n"],"sourceRoot":""}